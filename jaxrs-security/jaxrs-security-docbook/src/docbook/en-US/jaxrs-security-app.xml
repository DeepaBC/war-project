<!DOCTYPE partintro PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jaxrssec-app">
    <title>Enabling Application Security</title>
    <para></para>
    
    <section id="jaxrssec-app-securitydomain">
        <title></title>


        <section id="jaxrssec-app-jboss">
            <title>Adding Users to JBoss</title>
            <note>
                <para>JBoss provides several built-in security domain solutions. A simple
                   one (called "other") based on login and realm is based on a set 
                   of user and role property files. No matter which role we choose
                   and optionally later improve -- our application will work the same.</para>
            </note>
            <orderedlist>
                <listitem><para>Add an admin1/password to the ApplicationRealm with 
                   <code>admin</code> and <code>user</code> roles.</para>
<programlisting language=""><![CDATA[
$ ./jboss-as-7.1.1.Final/bin/add-user.sh 

What type of user do you wish to add? 
 a) Management User (mgmt-users.properties) 
 b) Application User (application-users.properties)
(a): b

Enter the details of the new user to add.
Realm (ApplicationRealm) : 
Username : admin1
Password : 
Re-enter Password : 
What roles do you want this user to belong to? (Please enter a comma separated list, or leave blank for none) : admin, user
About to add user 'admin1' for realm 'ApplicationRealm'
Is this correct yes/no? yes
Added user 'admin1' to file '/opt/jboss-as-7.1.1.Final/standalone/configuration/application-users.properties'
Added user 'admin1' to file '/opt/jboss-as-7.1.1.Final/domain/configuration/application-users.properties'
Added user 'admin1' with roles admin, user to file '/opt/jboss-as-7.1.1.Final/standalone/configuration/application-roles.properties'
Added user 'admin1' with roles admin, user to file '/opt/jboss-as-7.1.1.Final/domain/configuration/application-roles.properties'
]]></programlisting>
                    <warning>
                        <para>I ran into an issue with users with multiple roles that
                        was fixed with a manual edit of the roles.properties file.
                        I removed the space between <code>role1, role2</code> and 
                        then I was able to get my user assigned to second role 
                        as well as the first.</para>
                    </warning>        
               </listitem>
    
               <listitem><para>Add an user1/password to the ApplicationRealm with 
                   just the <code>user</code> role.</para>
<programlisting language=""><![CDATA[
$ ./jboss-as-7.1.1.Final/bin/add-user.sh 

What type of user do you wish to add? 
 a) Management User (mgmt-users.properties) 
 b) Application User (application-users.properties)                                                                                                    
(a): b

Enter the details of the new user to add.
Realm (ApplicationRealm) : 
Username : user1
Password : 
Re-enter Password : 
What roles do you want this user to belong to? (Please enter a comma separated list, or leave blank for none) : user
About to add user 'user1' for realm 'ApplicationRealm'
Is this correct yes/no? yes
Added user 'user1' to file '/opt/jboss-as-7.1.1.Final/standalone/configuration/application-users.properties'
Added user 'user1' to file '/opt/jboss-as-7.1.1.Final/domain/configuration/application-users.properties'
Added user 'user1' with roles user to file '/opt/jboss-as-7.1.1.Final/standalone/configuration/application-roles.properties'
Added user 'user1' with roles user to file '/opt/jboss-as-7.1.1.Final/domain/configuration/application-roles.properties'
]]></programlisting>        
               </listitem>
            </orderedlist>
        </section>


        <section id="jaxrssec-app-ejbwar">
            <title>Adding Authentication and Authorization to the WAR/EJB</title>
            <itemizedlist>
                <listitem><para>Add role auth-constraints for controlled
                    resources and methods to force the communications 
                    exchange to provide login information.</para>
<programlisting language=""><![CDATA[
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">        
...

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Authenticated Applications</web-resource-name>
            <url-pattern>/rest/applications</url-pattern>
            <http-method>DELETE</http-method>
            <http-method>POST</http-method>
            <http-method>PUT</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>             
            <role-name>user</role-name>             
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>        
...
    
    <security-role>
        <role-name>user</role-name>
    </security-role>
    <security-role>
        <role-name>admin</role-name>
    </security-role>
</web-app>
]]></programlisting>
                </listitem>

                <listitem><para>Add login-config for BASIC. Although this
                    technique issues users credentials without viable security
                    wrapper -- it is a suitable starting point when combined with
                    SSL and control over the local host.</para>
<programlisting language=""><![CDATA[
...
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>ApplicationRealm</realm-name>
    </login-config>
...
</web-app>
]]></programlisting>
                </listitem>

                <listitem><para>Add more precise definition of role constraints
                    using @javax.annotation.security.RolesAllowed.</para>
<programlisting language=""><![CDATA[
@Local(ApplicationsRS.class)
@Stateless
public class ApplicationsRSEJB implements ApplicationsRS {
    private static final Logger log = LoggerFactory.getLogger(ApplicationsRSEJB.class);
    private @Resource SessionContext ctx;
    @Inject
    private ApplicationsService service;
...    
    @Override
    @RolesAllowed({"admin"})
    public void purgeApplications(UriInfo uriInfo, Request request) {
        log.debug(String.format("purgeApplications as %s %s %s", 
                ctx.getCallerPrincipal().getName(),
                request.getMethod(),
                uriInfo.getRequestUri()));
        log.debug("isCallerInRole(\"admin\")={}", ctx.isCallerInRole("admin"));
        log.info("purging applications");
        service.purgeApplications();
    }
]]></programlisting>
                </listitem>

                <listitem><para>Add <code>WEB-INF/jboss-ejb3.xml</code> and assign 
                    proper security domain</para>
<programlisting language="xml"><![CDATA[
<?xml version="1.0"?>  
<jboss:ejb-jar xmlns:jboss="http://www.jboss.com/xml/ns/javaee"
                  xmlns="http://java.sun.com/xml/ns/javaee"
                  xmlns:s="urn:security"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-ejb3-2_0.xsd
                     http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd"
                  version="3.1"
                  impl-version="2.0">
  <assembly-descriptor>
    <s:security>
      <ejb-name>*</ejb-name>
      <s:security-domain>other</s:security-domain>
    </s:security>
  </assembly-descriptor>

</jboss:ejb-jar>
]]></programlisting>
                    <note>
                        <para>Without WEB-INF/jboss-ejb3.xml in place, programmatic
                            security seems to work but declarative @RolesAllowed
                            security constraints are ignored.</para>
                    </note>
                </listitem>
            </itemizedlist>                   
        </section>

        <section id="jaxrssec-app-client">
            <title>Adding Authentication and Authorization to the Client</title>
            <orderedlist>
                <listitem><para>Add credentials to HttpClient instances communicating 
                    with the app</para>
<programlisting language="java"><![CDATA[
httpClient.getCredentialsProvider().setCredentials(
        new AuthScope(null, -1, "ApplicationRealm"), 
        new UsernamePasswordCredentials(username, password));
]]></programlisting>
                    <para>Example setup of client credentials to access application</para>
                    <itemizedlist>
                        <listitem><para>Null host indicates any destination host</para></listitem>
                        <listitem><para>-1 port indicates any port number</para></listitem>
                        <listitem><para>realm name indicates which realm names these credentials should be applied to</para></listitem>
                    </itemizedlist>                   
                </listitem>
            </orderedlist>                   
        </section>
    </section>
    

</chapter>  
  