<chapter id="crud-post">
    <title>Using POST to Create a Resource</title>
    <para/>
    
    <figure>
        <title>Using POST to Create a Resource</title>
        <graphic fileref="images/dmv-post-request.png"/>
    </figure>
    <itemizedlist>
        <listitem><para>Client creates an application by</para>
            <itemizedlist>
                <listitem><para>issuing the POST method</para></listitem>
                <listitem><para>using the <code>/applications</code> URI</para></listitem>
                <listitem><para>supplying a representation for the resource</para></listitem>
                <listitem><para>sets <code>Content-Type</code> header to MediaType of the provided representation</para></listitem>
            </itemizedlist>
        </listitem>
        <listitem><para>If the request is completed</para>
            <itemizedlist>
                <listitem><para>the server</para>
                    <itemizedlist>
                        <listitem><para>returns a <code>201 Created</code> status code</para></listitem>
                        <listitem><para>sets <code>Location</code> header to URI of created content</para></listitem>
                        <listitem><para>optionally provides a representation of the content</para></listitem>
                        <listitem><para>sets <code>Content-Location</code> to the URI of the provided representation</para></listitem>
                        <listitem><para>sets <code>Content-Type</code> header to MediaType of the provided representation</para></listitem>
                    </itemizedlist>
                </listitem>
                <listitem><para>the client</para>
                    <itemizedlist>
                        <listitem><para>uses the provided <code>Location</code> to reference the resource in the future</para></listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </listitem>
        <listitem><para>If the request fails due to a bad client input</para>
            <itemizedlist>
                <listitem><para>the server</para>
                    <itemizedlist>
                        <listitem><para>returns a <code>400 Bad Request</code> status code</para></listitem>
                        <listitem><para>optionally provides a representation of the error</para></listitem>
                        <listitem><para>sets <code>Content-Type</code> header to MediaType of the provided error representation</para></listitem>
                    </itemizedlist>
                </listitem>
                <listitem><para>the client</para>
                    <itemizedlist>
                        <listitem><para>should not repeat this request with the same data</para></listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </listitem>
        <listitem><para>If the request fails due to a server error</para>
            <itemizedlist>
                <listitem><para>the server</para>
                    <itemizedlist>
                        <listitem><para>returns a <code>500 Internal Server Error</code> status code</para></listitem>
                        <listitem><para>optionally provides a representation of the error</para></listitem>
                        <listitem><para>sets <code>Content-Type</code> header to MediaType of the provided error representation</para></listitem>
                    </itemizedlist>
                </listitem>
                <listitem><para>the client</para>
                    <itemizedlist>
                        <listitem><para>can retry their valid request at a later time</para></listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </listitem>
    </itemizedlist>
    
    <section id="crud-post-create-request">
        <title>POST Request</title>
        <para/>
        <figure id="post-create-request-figure">
            <title>POST Create Request</title>
            <programlistingco>
                <areaspec units="linerange">
                    <area id="post-create-request-uri" coords="1"/>
                    <area id="post-create-request-content-type" coords="2"/>
                    <area id="post-create-request-content-length" coords="3"/>
                    <area id="post-create-request-host" coords="4"/>
                    <area id="post-create-request-representation" coords="8"/>
                </areaspec>
                <programlisting language="text" linenumbering="numbered" ><![CDATA[POST /restintro-dmv-war6/applications HTTP/1.1
Content-Type: application/xml
Content-Length: 486
Host: dmv.ejava.info:8050
Connection: Keep-Alive
User-Agent: Apache-HttpClient/4.1.3 (java 1.5)

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
   <ns2:residentIDApplication xmlns:ns2="http://dmv.ejava.info">    
      <id>0</id>    
      <identity>        
         <id>0</id>        
         <firstName>peyton</firstName>        
         <lastName>manning</lastName>        
         <contacts>            
            <contact>                
               <type>RESIDENCE</type>                
               <city>Indianapolis</city>                
               <state>IN</state>            
            </contact>        
         </contacts>    
      </identity>
   </ns2:residentIDApplication>]]></programlisting>
            <calloutlist>
                <callout arearefs="post-create-request-uri"><para>Method and target URI for resource</para></callout>
                <callout arearefs="post-create-request-content-type"><para>Content type of resource representation in payload</para></callout>
                <callout arearefs="post-create-request-content-length"><para>Number of bytes in representation</para></callout>
                <callout arearefs="post-create-request-host"><para>Target hostname and port hosting resource -- useful with virtual hosts</para></callout>
                <callout arearefs="post-create-request-representation"><para>Client-supplied representation</para></callout>
            </calloutlist>
            </programlistingco>
        </figure>
    </section>
    
    <section id="crud-post-created-response">
        <title>POST Created Response</title>
        <para/>
        <figure id="crud-post--created-response-figure">
            <title>POST Created Response</title>
                <programlistingco>
                    <areaspec>
                        <area id="status-code" coords="1"/>
                        <area id="last-modified" coords="3"/>
                        <area id="post-response-location" coords="4"/>
                        <area id="post-response-content-location" coords="5"/>
                        <area id="post-response-content-type" coords="6"/>
                        <area id="post-response-representation" coords="10"/>
                    </areaspec>
                    <programlisting language="text" linenumbering="numbered"><![CDATA[HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
Last-Modified: Wed, 28 Mar 2012 03:07:26 GMT
Location: http://dmv.ejava.info:8050/restintro-dmv-war6/applications/26
Content-Location: http://dmv.ejava.info:8050/restintro-dmv-war6/applications/26
Content-Type: application/xml
Content-Length: 593
Date: Wed, 28 Mar 2012 03:07:33 GMT


   <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
      <ns2:residentIDApplication xmlns:ns2="http://dmv.ejava.info">    
         <id>26</id>    
         <updated>2012-03-27T23:07:26.373-04:00</updated>    
         <created>2012-03-27T23:07:26.373-04:00</created>    
         <identity>        
            <id>0</id>        
            <firstName>peyton</firstName>        
            <lastName>manning</lastName>        
            <contacts>            
               <contact>                
                  <type>RESIDENCE</type>                
                  <city>Indianapolis</city>                
                  <state>IN</state>            
               </contact>        
            </contacts>    
         </identity>
      </ns2:residentIDApplication>    
]]></programlisting>
            <calloutlist>
                <callout arearefs="status-code"><para>Server status code</para></callout>
                <callout arearefs="last-modified"><para>Date resource last modified - useful in caching</para></callout>
                <callout arearefs="post-response-location"><para>URI where POST created the resource</para></callout>
                <callout arearefs="post-response-content-location"><para>URI of the resource represented in response payload</para></callout>
                <callout arearefs="post-response-content-type"><para>Content type of the resource representation provided payload</para></callout>
                <callout arearefs="post-response-representation"><para>Server supplied resource representation</para></callout>
            </calloutlist>
           </programlistingco>
        </figure>
        <note>
            <para>Optional for the POST to return a resource representation</para>
        </note>
    </section>

    <section id="crud-post-bad-request-response">
        <title>POST Response with Bad Request</title>
        <para/>
        <figure id="crud-post-bad-request-response-figure">
            <title>POST Response with Bad Request</title>
                <programlistingco>
                    <areaspec>
                        <area id="post-bad-request-status-code" coords="1"/>
                        <area id="post-bad-request-content-type" coords="3"/>
                        <area id="post-bad-request-representation" coords="8"/>
                    </areaspec>
                    <programlisting language="text" linenumbering="numbered"><![CDATA[HTTP/1.1 400 Bad Request
Server: Apache-Coyote/1.1
Content-Type: text/plain
Content-Length: 29
Date: Sat, 31 Mar 2012 01:26:41 GMT
Connection: close

client error:identity missing
]]></programlisting>
            <calloutlist>
                <callout arearefs="post-bad-request-status-code"><para>Server status code indicating the request failed due to bad input. The request should not be repeated</para></callout>
                <callout arearefs="post-bad-request-content-type"><para>MediaType for the payload expressing the error</para></callout>
                <callout arearefs="post-bad-request-representation"><para>Optional error payload. In this specific case, a text error message is being returned.</para></callout>
            </calloutlist>
           </programlistingco>
        </figure>
        <note>
            <title>Consider Postel's Law when determining Bad Request</title>
            <para> "be conservative in what you do, be liberal in what you accept from others" (often reworded as "be conservative in what you send, liberal in what you accept").
            <footnote id="postels-law"><para><ulink url="http://en.wikipedia.org/wiki/Jon_Postel#Postel.27s_Law">http://en.wikipedia.org/wiki/Jon_Postel#Postel.27s_Law</ulink></para></footnote></para>
        </note>
    </section>

    <section id="crud-post-server-error-response">
        <title>POST Response with Server Error</title>
        <para/>
        <figure id="crud-post-server-error-response-figure">
            <title>POST Response with Server Error</title>
                <programlistingco>
                    <areaspec>
                        <area id="post-server-error-status-code" coords="1"/>
                        <area id="post-server-error-content-type" coords="3"/>
                        <area id="post-server-error-representation" coords="8"/>
                    </areaspec>
                    <programlisting language="text" linenumbering="numbered"><![CDATA[HTTP/1.1 500 Internal Server Error
Server: Apache-Coyote/1.1
Content-Type: text/plain
Content-Length: 44
Date: Sat, 31 Mar 2012 01:29:34 GMT
Connection: close

server error:server error completing request
]]></programlisting>
            <calloutlist>
                <callout arearefs="post-server-error-status-code"><para>Server status code indicating the request failed due a server failure. A retry can be performed later.</para></callout>
                <callout arearefs="post-server-error-content-type"><para>MediaType for the payload expressing the error</para></callout>
                <callout arearefs="post-server-error-representation"><para>Optional error payload. In this specific case, a text error message is being returned.</para></callout>
            </calloutlist>
           </programlistingco>
        </figure>
        <note>
            <title>Design for Errors to Convey Information</title>
            <para>Error representations for service responses should be well 
            thought out. When things go bad - people want useful information. This 
            example at least provides a status code and a context-specific 
            text reason that can be displayed or logged. 
            </para>
        </note>
    </section>
    
    <section id="crud-post-other-response-status-codes">
        <title>Other Possible POST Response Status Codes</title>
        <para>(not a complete list)
        <footnote id="http-status-codes-ref"><para>
        <ulink url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">HTTP Status Codes, W3C</ulink>
        </para>
        </footnote>
        </para>
        <itemizedlist>
            <listitem><para>503 Service Unavailable</para>
                <itemizedlist>
                    <listitem><para><code>Retry-After</code> header</para></listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
    </section>

    <section id="crud-post-jaxrs-impl">
        <title>Sample JAX-RS POST (application/xml) Implementation</title>
        <para/>
        <figure id="createApplication-jaxrs-impl-figure">
            <title>Sample JAX-RS POST (application/xml) Implementation</title>
            <programlistingco>
                <areaspec>
                    <area id="createApplication-jaxrs-impl-base-uri" coords="1"/>
                    <area id="createApplication-jaxrs-impl-method" coords="4"/>
                    <area id="createApplication-jaxrs-impl-consumes" coords="5"/>
                    <area id="createApplication-jaxrs-impl-produces" coords="6"/>
                    <area id="createApplication-jaxrs-impl-formatted" coords="7"/>
                    <area id="createApplication-jaxrs-impl-service" coords="10"/>
                    <area id="createApplication-jaxrs-impl-build-uri" coords="11"/>
                    <area id="createApplication-jaxrs-impl-201" coords="14"/>
                    <area id="createApplication-jaxrs-impl-400" coords="23"/>
                    <area id="createApplication-jaxrs-impl-500" coords="29"/>
                </areaspec>
                <programlisting language="java" linenumbering="unnumbered"><![CDATA[@Path("applications") 
public class ApplicationsRS {
...
    @POST
    @Consumes(MediaType.APPLICATION_XML)
    @Produces(MediaType.APPLICATION_XML)
    @Formatted
    public Response createApplication(ResidentIDApplication app) {
        try {
            Application createdApp = service.createApplication(app);
            URI uri=uriInfo.getAbsolutePathBuilder()
                    .path(ApplicationsRS.class, "getApplicationById")
                    .build(createdApp.getId());
            return Response
                    .created(uri)   //201-Created and a Location header of what was created
                    .entity(createdApp) //marshals the representation in response
                    .contentLocation(uri) //Content-Location header of representation
                    .type(MediaType.APPLICATION_XML) //Content-Type header of representation
                    .lastModified(createdApp.getUpdated()) //Last-Modified header of the representation
                    .build();
        } 
        catch (BadArgument ex) {
            return Response.status(Status.BAD_REQUEST)
                    .entity("client error:" + ex.getLocalizedMessage())
                    .type(MediaType.TEXT_PLAIN)
                    .build();
        }
        catch (Exception ex) {
            return Response.serverError()
                    .entity("server error:" + ex.getLocalizedMessage())
                    .type(MediaType.TEXT_PLAIN)
                    .build();
        }
    }
]]></programlisting>
            <calloutlist>
                <callout arearefs="createApplication-jaxrs-impl-base-uri"><para>Base URI for all methods in class</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-method"><para>Method responds to POST method</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-consumes"><para>Method accepts XML MediaType</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-produces"><para>Method returns XML MediaType</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-formatted"><para>RESTEasy extension to format XML response</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-service"><para>JAX-RS interface delegates to service implementation</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-build-uri"><para>JAX-RS helper to build representation URI</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-201"><para>JAX-RS helper to build 201 status and representation</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-400"><para>RESTEasy extension to trigger 400 status</para></callout>
                <callout arearefs="createApplication-jaxrs-impl-500"><para>RESTEasy extension to trigger 500 status</para></callout>
            </calloutlist>
           </programlistingco>
        </figure>
    </section>
</chapter>
